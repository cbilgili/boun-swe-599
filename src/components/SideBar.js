import React from 'react';
import {connect} from 'react-redux';

import NodeType from './NodeType';
import Transition from "./Transition";

import {saveFile, loadFile} from '../redux/actions/fileActions';

class SideBar extends React.Component {
    render() {
        const nodeTypes = this.props.nodeTypes.map((id, i) => <NodeType key={i} id={id}/>);
        const transitionTypes = this.props.transitions.map((id, i) => <Transition key={i} id={id}/>);
        return (
            <div className="col-md-2">
                <div>
                    <h3>Nodes</h3>
                    <svg width="121" height="52" viewBox="0 0 121 52" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="0.5" y="0.5" width="120" height="51" rx="14.5" fill="#A0E2A3" stroke="black"/>
</svg>
<svg width="72" height="51" viewBox="0 0 72 51" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.57324 44.3564H2.93945V48H0.888672V38.0469H4.58691C5.7627 38.0469 6.6696 38.3089 7.30762 38.833C7.94564 39.3571 8.26465 40.0977 8.26465 41.0547C8.26465 41.7337 8.11654 42.3011 7.82031 42.7568C7.52865 43.208 7.08431 43.568 6.4873 43.8369L8.64062 47.9043V48H6.43945L4.57324 44.3564ZM2.93945 42.6953H4.59375C5.10872 42.6953 5.50749 42.5654 5.79004 42.3057C6.07259 42.0413 6.21387 41.679 6.21387 41.2188C6.21387 40.7493 6.07943 40.3802 5.81055 40.1113C5.54622 39.8424 5.13835 39.708 4.58691 39.708H2.93945V42.6953ZM12.8945 48.1367C11.8099 48.1367 10.9257 47.804 10.2421 47.1387C9.56311 46.4733 9.22359 45.5869 9.22359 44.4795V44.2881C9.22359 43.5452 9.36715 42.8822 9.65426 42.2988C9.94137 41.7109 10.347 41.2598 10.8711 40.9453C11.3997 40.6263 12.0013 40.4668 12.6757 40.4668C13.6875 40.4668 14.4827 40.7858 15.0615 41.4238C15.6448 42.0618 15.9365 42.9665 15.9365 44.1377V44.9443H11.2265C11.2903 45.4274 11.4817 45.8148 11.8007 46.1064C12.1243 46.3981 12.5322 46.5439 13.0244 46.5439C13.7854 46.5439 14.3802 46.2682 14.8086 45.7168L15.7793 46.8037C15.483 47.223 15.082 47.5511 14.5761 47.7881C14.0703 48.0205 13.5097 48.1367 12.8945 48.1367ZM12.6689 42.0664C12.277 42.0664 11.958 42.1986 11.7119 42.4629C11.4703 42.7272 11.3154 43.1055 11.247 43.5977H13.9951V43.4404C13.986 43.0029 13.8675 42.6657 13.6396 42.4287C13.4117 42.1872 13.0882 42.0664 12.6689 42.0664ZM17.3329 48V42.0527H16.2323V40.6035H17.3329V40.2617C17.342 39.332 17.6269 38.6165 18.1874 38.1152C18.7525 37.6094 19.5478 37.3564 20.5732 37.3564C21.1884 37.3564 21.9358 37.4909 22.8154 37.7598L22.5282 39.3936C22.0816 39.2614 21.7353 39.1771 21.4892 39.1406C21.2431 39.0996 20.9788 39.0791 20.6962 39.0791C19.7756 39.0791 19.3154 39.487 19.3154 40.3027V40.6035H20.7714V42.0527H19.3154V48H17.3329ZM23.7382 48H21.7558V40.6035H23.7382V48ZM26.9804 40.6035L27.0419 41.458C27.5705 40.7972 28.2792 40.4668 29.1679 40.4668C29.9517 40.4668 30.535 40.6969 30.9179 41.1572C31.3007 41.6175 31.4966 42.3057 31.5057 43.2217V48H29.5302V43.2695C29.5302 42.8503 29.439 42.5472 29.2567 42.3604C29.0744 42.1689 28.7714 42.0732 28.3475 42.0732C27.7916 42.0732 27.3746 42.3102 27.0966 42.7842V48H25.121V40.6035H26.9804ZM36.2039 48.1367C35.1193 48.1367 34.2352 47.804 33.5516 47.1387C32.8726 46.4733 32.533 45.5869 32.533 44.4795V44.2881C32.533 43.5452 32.6766 42.8822 32.9637 42.2988C33.2508 41.7109 33.6564 41.2598 34.1805 40.9453C34.7092 40.6263 35.3107 40.4668 35.9852 40.4668C36.9969 40.4668 37.7922 40.7858 38.3709 41.4238C38.9543 42.0618 39.2459 42.9665 39.2459 44.1377V44.9443H34.536C34.5998 45.4274 34.7912 45.8148 35.1102 46.1064C35.4338 46.3981 35.8416 46.5439 36.3338 46.5439C37.0949 46.5439 37.6896 46.2682 38.118 45.7168L39.0887 46.8037C38.7925 47.223 38.3914 47.5511 37.8856 47.7881C37.3797 48.0205 36.8192 48.1367 36.2039 48.1367ZM35.9784 42.0664C35.5864 42.0664 35.2674 42.1986 35.0213 42.4629C34.7798 42.7272 34.6248 43.1055 34.5565 43.5977H37.3045V43.4404C37.2954 43.0029 37.1769 42.6657 36.9491 42.4287C36.7212 42.1872 36.3976 42.0664 35.9784 42.0664ZM42.0164 40.6035L42.0779 41.4307C42.602 40.7881 43.3107 40.4668 44.2039 40.4668C45.1564 40.4668 45.8104 40.8428 46.1658 41.5947C46.6854 40.8428 47.4259 40.4668 48.3875 40.4668C49.1896 40.4668 49.7866 40.7015 50.1785 41.1709C50.5704 41.6357 50.7664 42.3376 50.7664 43.2764V48H48.784V43.2832C48.784 42.8639 48.702 42.5586 48.5379 42.3672C48.3738 42.1712 48.0844 42.0732 47.6697 42.0732C47.0773 42.0732 46.6671 42.3558 46.4393 42.9209L46.4461 48H44.4705V43.29C44.4705 42.8617 44.3862 42.5518 44.2176 42.3604C44.049 42.1689 43.7618 42.0732 43.3563 42.0732C42.7957 42.0732 42.3901 42.3057 42.1395 42.7705V48H40.1639V40.6035H42.0164ZM55.4851 48.1367C54.4005 48.1367 53.5164 47.804 52.8328 47.1387C52.1537 46.4733 51.8142 45.5869 51.8142 44.4795V44.2881C51.8142 43.5452 51.9578 42.8822 52.2449 42.2988C52.532 41.7109 52.9376 41.2598 53.4617 40.9453C53.9903 40.6263 54.5919 40.4668 55.2664 40.4668C56.2781 40.4668 57.0733 40.7858 57.6521 41.4238C58.2354 42.0618 58.5271 42.9665 58.5271 44.1377V44.9443H53.8172C53.881 45.4274 54.0724 45.8148 54.3914 46.1064C54.7149 46.3981 55.1228 46.5439 55.615 46.5439C56.3761 46.5439 56.9708 46.2682 57.3992 45.7168L58.3699 46.8037C58.0737 47.223 57.6726 47.5511 57.1668 47.7881C56.6609 48.0205 56.1004 48.1367 55.4851 48.1367ZM55.2595 42.0664C54.8676 42.0664 54.5486 42.1986 54.3025 42.4629C54.061 42.7272 53.906 43.1055 53.8377 43.5977H56.5857V43.4404C56.5766 43.0029 56.4581 42.6657 56.2302 42.4287C56.0024 42.1872 55.6788 42.0664 55.2595 42.0664ZM61.2634 40.6035L61.3249 41.458C61.8536 40.7972 62.5622 40.4668 63.4509 40.4668C64.2348 40.4668 64.8181 40.6969 65.2009 41.1572C65.5837 41.6175 65.7797 42.3057 65.7888 43.2217V48H63.8132V43.2695C63.8132 42.8503 63.7221 42.5472 63.5398 42.3604C63.3575 42.1689 63.0544 42.0732 62.6306 42.0732C62.0746 42.0732 61.6576 42.3102 61.3796 42.7842V48H59.404V40.6035H61.2634ZM69.4479 38.7852V40.6035H70.7126V42.0527H69.4479V45.7441C69.4479 46.0176 69.5003 46.2135 69.6052 46.332C69.71 46.4505 69.9105 46.5098 70.2067 46.5098C70.4255 46.5098 70.6192 46.4938 70.7878 46.4619V47.959C70.4004 48.0775 70.0016 48.1367 69.5915 48.1367C68.2061 48.1367 67.4997 47.4372 67.4723 46.0381V42.0527H66.3923V40.6035H67.4723V38.7852H69.4479Z" fill="black"/>
<circle cx="36" cy="15" r="15" fill="black"/>
</svg>
<svg width="82" height="9" viewBox="0 0 82 9" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1 7.1841C11.3333 2.51743 41.8 -4.0159 81 7.1841" stroke="black"/>
<line x1="77.3536" y1="3.64645" x2="81.3536" y2="7.64645" stroke="black"/>
<line x1="75.9019" y1="8.50971" x2="80.9019" y2="7.50971" stroke="black"/>
</svg>
<svg width="78" height="30" viewBox="0 0 78 30" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="15" cy="15" r="14.5" fill="#A0E2A3" stroke="black"/>
<path d="M17.877 15.6865H13.9395V18.3525H18.5605V20H11.8887V10.0469H18.5469V11.708H13.9395V14.0801H17.877V15.6865Z" fill="black"/>
<path d="M60.3536 15.3536C60.5488 15.1583 60.5488 14.8417 60.3536 14.6464L57.1716 11.4645C56.9763 11.2692 56.6597 11.2692 56.4645 11.4645C56.2692 11.6597 56.2692 11.9763 56.4645 12.1716L59.2929 15L56.4645 17.8284C56.2692 18.0237 56.2692 18.3403 56.4645 18.5355C56.6597 18.7308 56.9763 18.7308 57.1716 18.5355L60.3536 15.3536ZM32 15.5H60V14.5H32V15.5Z" fill="black"/>
<path d="M70.5 8L76.9952 19.25H64.0048L70.5 8Z" fill="black"/>
</svg>

                    {nodeTypes}
                </div>
                <div>
                    <h3>Transitions</h3>
                    {transitionTypes}
                </div>
            </div>
        );
    }
}

function mapStateToProps(state) {
    const nodeTypes = state.nodeTypes.array;
    const transitions= state.transitions.array;
    return {
        nodeTypes,
        transitions,
    };
}

const mapDispatchToProps = {
    saveFile,
    loadFile,
}

export default connect(mapStateToProps, mapDispatchToProps)(SideBar);
